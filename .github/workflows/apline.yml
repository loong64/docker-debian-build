name: Alpine Artifacts

on:
  schedule:
    - cron: '0 20 * * 0'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['3.21']

    steps:
      - uses: docker/setup-buildx-action@v3

      - name: Setup qemu-user-static
        run: docker run --rm --privileged ghcr.io/loong64/qemu-user-static --reset -p yes

      - name: Checkout code for alpine
        uses: actions/checkout@v4
        with:
          repository: alpinelinux/docker-alpine
          ref: v${{ matrix.version }}
      
      - name: Get Version
        id: get_version
        run: |
          full_version=$(grep -oP '(?<=alpine-minirootfs-)[0-9]+\.[0-9]+\.[0-9]+' loongarch64/Dockerfile)
          minor_version=$(echo $full_version | grep -oP '^[0-9]+\.[0-9]+')
          major_version=$(echo $full_version | grep -oP '^[0-9]+')
          echo "full_version=$full_version" >> $GITHUB_OUTPUT
          echo "minor_version=$minor_version" >> $GITHUB_OUTPUT
          echo "major_version=$major_version" >> $GITHUB_OUTPUT

          if ! echo $full_version | grep -q ${{ matrix.version }}; then
            echo "Version is different"
            exit 1
          fi

          echo "Current Version: $full_version"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: ./loongarch64
          platforms: linux/loong64
          provenance: false
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/alpine:latest
            ghcr.io/${{ github.repository_owner }}/alpine:${{ steps.get_version.outputs.full_version }}
            ghcr.io/${{ github.repository_owner }}/alpine:${{ steps.get_version.outputs.minor_version }}
            ghcr.io/${{ github.repository_owner }}/alpine:${{ steps.get_version.outputs.major_version }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max