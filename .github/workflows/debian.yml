name: Debian Artifacts

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: docker/setup-buildx-action@v3

      - name: Setup Git
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Setup qemu-user-static
        run: docker run --rm --privileged ghcr.io/loong64/qemu-user-static --reset -p yes

      - name: Checkout code for debuerreotype
        uses: actions/checkout@v4
        with:
          repository: debuerreotype/debuerreotype
          ref: master
          path: debuerreotype

      - name: Checkout code for docker-debian-artifacts
        uses: actions/checkout@v4
        with:
          repository: loong64/docker-debian-artifacts
          path: docker-debian-artifacts
          token: ${{ secrets.GH_TOKEN }}

      - name: Build debuerreotype
        run: |
          cd debuerreotype
          serial=$(date "+%Y%m%d")
          sed -i 's@\[ -z "$SHA256" \]@# \[ -z "$SHA256" \]@g' .validate-debian.sh
          ARCH=loong64 SUITE=unstable CODENAME="sid" TIMESTAMP="today 00:00:00" ./.validate-debian.sh
          sed -i 's@riscv64@loong64 | riscv64@g' examples/oci-image.sh
          mv validate/* validate/debian
          mv validate/debian/loong64 validate/debian/archive
          echo "${serial}" > validate/debian/archive/serial
          cp -f validate/debian/archive/unstable/rootfs.dpkg-arch validate/debian/archive/dpkg-arch
          cp -f validate/debian/archive/unstable/rootfs.debuerreotype-version validate/debian/archive/debuerreotype-version
          cp -f validate/debian/archive/unstable/rootfs.debuerreotype-epoch validate/debian/archive/debuerreotype-epoch
          # OCI: https://github.com/docker-library/oi-janky-groovy/blob/master/tianon/debuerreotype/arch-pipeline.groovy
          shopt -s globstar
          for rootfs in validate/debian/archive/**/rootfs.tar.xz; do
            dir="$(dirname "$rootfs")"
            ./examples/oci-image.sh "$dir/oci.tar" "$dir"
          done
          cd validate/debian
          zip -r artifacts.zip archive
          echo "serial=${serial}" >> $GITHUB_ENV

      - name: Build docker-debian-artifacts
        run: |
          cd docker-debian-artifacts
          git push origin --delete dist-loong64 || true
          git branch -D dist-loong64 || true
          git checkout -b dist-loong64
          echo "loong64" > arch
          mv ../debuerreotype/validate/debian/artifacts.zip .
          sed -i "s@^wget -O artifacts.zip@# wget -O artifacts.zip@g" download.sh
          bash -ex download.sh
          git add .
          git commit -m "feat: update ${{ env.serial }}"
          git push origin dist-loong64 -f

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push sid Image
        uses: docker/build-push-action@v6
        with:
          context: ./docker-debian-artifacts/sid
          platforms: linux/loong64
          provenance: false
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/debian:latest
            ghcr.io/${{ github.repository_owner }}/debian:trixie
            ghcr.io/${{ github.repository_owner }}/debian:trixie-${{ env.serial }}
            ghcr.io/${{ github.repository_owner }}/debian:sid
            ghcr.io/${{ github.repository_owner }}/debian:sid-${{ env.serial }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push sid slim Image
        uses: docker/build-push-action@v6
        with:
          context: ./docker-debian-artifacts/sid/slim
          platforms: linux/loong64
          provenance: false
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/debian:trixie-slim
            ghcr.io/${{ github.repository_owner }}/debian:trixie-${{ env.serial }}-slim
            ghcr.io/${{ github.repository_owner }}/debian:sid-slim
            ghcr.io/${{ github.repository_owner }}/debian:sid-${{ env.serial }}-slim
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push unstable Image
        uses: docker/build-push-action@v6
        with:
          context: ./docker-debian-artifacts/unstable
          platforms: linux/loong64
          provenance: false
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/debian:unstable
            ghcr.io/${{ github.repository_owner }}/debian:unstable-${{ env.serial }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push unstable slim Image
        uses: docker/build-push-action@v6
        with:
          context: ./docker-debian-artifacts/unstable/slim
          platforms: linux/loong64
          provenance: false
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/debian:unstable-slim
            ghcr.io/${{ github.repository_owner }}/debian:unstable-${{ env.serial }}-slim
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max